variables:
  PYENV: "vac2fost-test-env"
  SLURM_CMD: "srun --exclusive=user -p gitlab --cpus-per-task 1"
cache:
  paths:
    - deps/
  untracked: false

before_script:
  - hostname
  - pwd
  - echo $USER
  - echo $GITLAB_USER_ID
  - echo $GITLAB_USER_NAME
  - echo $GITLAB_USER_LOGIN
  - module load userspace/170135
  - module load python/3.6.3_anaconda3
  - export PATH=$PATH:`pwd`/deps
  - export MCFOST_UTILS=`pwd`/deps/mcfost_utils

stages:
  - build
  - install
  - finish_install
  - unit_tests
  - integration_tests
  - validation_tests
  - final

update_pyenv:
  stage: build
  script:
    - export CONDA_INST="--name $PYENV --file environment.yml --channel conda-forge --yes"
    - $SLURM_CMD conda create $CONDA_INST || $SLURM_CMD conda install $CONDA_INST
    - $SLURM_CMD conda install pip --name $PYENV --yes

download_deps:
  stage: build
  script:
    - $SLURM_CMD bash dl_deps.sh

install_mcfost:
  stage: build
  script:
    - mkdir deps || echo "skip mkdir"
    - cd deps/
    - $SLURM_CMD wget http://ipag.osug.fr/public/pintec/mcfost/linux/mcfost.tgz
    - tar xvzf mcfost.tgz
    - chmod +x mcfost
    - mkdir -p $MCFOST_UTILS || echo "skip mkdir"
    - $SLURM_CMD ./mcfost -setup

install_deps:
  stage: install
  script:
    - source activate $PYENV
    - $SLURM_CMD pip install `pwd`/deps/vtk_vacreader-project
    - $SLURM_CMD pip install `pwd`/deps/amrvac-pywrap-project

validate_mcfost:
  stage: install
  script:
    - which mcfost
    - mcfost -version

install_vac2fost:
  stage: finish_install
  script:
    - source activate $PYENV
    - export PATH=$PATH:`pwd`/deps
    - $SLURM_CMD pip install .

params:
  stage: unit_tests
  script:
    - source activate $PYENV
    - $SLURM_CMD pytest tests/test_params.py

io:
  stage: unit_tests
  script:
    - source activate $PYENV
    - $SLURM_CMD pytest tests/test_io.py

dust_binning_mode:
  stage: unit_tests
  script:
    - source activate $PYENV
    - $SLURM_CMD pytest tests/test_dust_binning_mode.py

mcfost_grid:
  stage: unit_tests
  script:
    - source activate $PYENV
    - $SLURM_CMD pytest tests/test_mcfost_grid.py

mcfost_writter:
  stage: unit_tests
  script:
    - source activate $PYENV
    - $SLURM_CMD pytest tests/test_mcfost_writter.py

test_env:
  stage: integration_tests
  script:
    - source activate $PYENV
    - $SLURM_CMD pytest tests/test_env.py

# shell:
#   stage: integration_tests
#   script:
#     - source activate $PYENV
#     - $SLURM_CMD pytest tests/test_shell.py

scripting:
  stage: integration_tests
  script:
    - source activate $PYENV
    - $SLURM_CMD pytest tests/test_scripting.py

gas_reading:
  stage: integration_tests
  script:
    - source activate $PYENV
    - $SLURM_CMD pytest tests/test_gas_reading.py

# regression:
#   stage: validation_tests
#   script:
#     - source activate $PYENV
#     - $SLURM_CMD pytest tests/test_regression.py

code_quality:
  stage: final
  script:
    - source activate $PYENV
    - pylint --rcfile .pylintrc vac2fost/vac2fost.py
